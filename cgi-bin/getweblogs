#!/usr/local/bin/perl

use CGI qw(:standard);
use strict;

select STDOUT;
$|=1;
open (STDERR,">&STDOUT");


print header();


# Form parameters

my $servername = param('server');
my $logtype = param('logtype');
my $tail = param('tail');

#
my $APACHE = "/opt/software/apache2";

my $flagVirtualHost = 0;
my %servers;

my $serverName;
my $accessLog;
my $errorLog;

open (CONF, "$APACHE/conf/extra/httpd-vhosts.conf") || die "cannot open $APACHE/conf/extra/httpd-vhosts.conf";

while (<CONF>) {
	chomp;

	if (/^<VirtualHost .*:80>/) {
		$flagVirtualHost = 1;
	}
	elsif ($flagVirtualHost == 1 && /^\s*ServerName\s*(.*)/) {
		$serverName = $1;
	}
	elsif ($flagVirtualHost == 1 && /^\s*CustomLog\s*(.*)\s*(common|combined)/) {
		$accessLog = $1;
		if (not -r $accessLog) {
			$accessLog = "$APACHE/$accessLog";
		}
		$servers{$serverName}->{access} = $accessLog;
	}
	elsif ($flagVirtualHost == 1 && /^\s*ErrorLog\s*(.*)/) {
		$errorLog = $1;
		if (not -r $errorLog) {
			$errorLog = "$APACHE/$errorLog";
		}
		$servers{$serverName}->{error} = $errorLog;
	}
	elsif ($flagVirtualHost == 1 && /^<\/VirtualHost>/) {
		$flagVirtualHost = 0;
	}
}

close CONF;

#my $server;
#for $server (sort keys %servers) {
#	print "$servers{$server}->{access}\n";
#	print "$servers{$server}->{error}\n";
#}


# Set default parameter values

if ( ! $servername ) {
	$servername = $ENV{'SERVER_NAME'};
}

if ( ! $logtype ) {
	$logtype = "access";
}

if ( ! $tail ) {
	$tail = 20;
}


# Handle non-digit value
$tail =~ s/\D//ig;

# Handle negative value
$tail = ( $tail < 0 ) ? 0 : $tail;


#
# server list to select from
#

my $serverlist = &buildServerSelect($servername);
my $LOG = &getLog($servername, $logtype);
my $ScriptURL = &getScriptURL($ENV{'SERVER_NAME'}, $ENV{'SCRIPT_NAME'});


# Print the form

print <<EOF;
<head>
<title>Access/Error Log Viewer</title>
<SCRIPT LANGUAGE="JavaScript"> 
function change_url(script) {
   var server = window.document.new_url_form.server.value;
   var lines = window.document.new_url_form.tail.value;
   var logtype = window.document.new_url_form.logtype.value;
   var url = "http://" + server + script +"?server="+server+"&logtype="+logtype+"&tail="+lines;
   window.document.location=url;
}
</SCRIPT>
<style>
<!--
a{color:#000060;font-weight:bold;font-family:arial;text-decoration:underline;font-size:13px;}
a:hover{color:#0000c0;font-weight:bold;font-family:arial;text-decoration:none;font-size:13px;}
// -->
</style>
</head>
EOF

my $script_name = $ENV{'SCRIPT_NAME'};
my $javascript = "onClick=\"javascript:change_url('$script_name'); return false\"";

print <<EOF;
<table border=0 width=100% cellpadding=3 cellspacing="0" style="border:white outset 2px;">
<tr bgcolor="#ffd000">
<form name="new_url_form">
<td>
<font face="arial,verdana,helvetica">
<b>Server:</b>
</font>
<select name="server">
	$serverlist
</select>

<font face="arial,verdana,helvetica">
<b>Log:</b>
</font>
EOF

if ($logtype eq "access") {
	print "<select name=\"logtype\">
	<option selected>access
	<option>error
	</select>\n";
} else {
	print "<select name=\"logtype\">
	<option>access
	<option selected>error
	</select>\n";
}
	
print <<EOF;
<font face="arial,verdana,helvetica">
<b>Last # Lines:</b>
</font>
<input type="text" name="tail" value="$tail"  size="5"> 
<font face="arial,verdana,helvetica">
<b>to</b>
</font>
<font style="font-size:13px;font-weight:bold;font-family:arial;">
<input type="submit" value="View" $javascript style="font-size:13px;font-weight:bold;font-family:arial;cursor:hand;">
</font>
</td>
</form>
</tr>
</table>
<br>
<font face="arial,verdana,helvetica">
<PRE>
EOF

print "\u$logtype log for $ENV{'SERVER_NAME'}:\n\n";

my $tailcommand = "tail -n " . $tail . " " . $LOG;
system($tailcommand);

print <<EOF;
</PRE>
EOF

exit;


#################################################################### 


sub buildServerSelect {
    my($servername) = @_;

    my $server;
    my $text;
    $text = "";
    for $server (sort keys %servers) {
        if ($server eq $servername) {
		$text .= "<option selected> $server";
	} else {
		$text .= "<option> $server";
	}
    }
    return($text);
}

sub getScriptURL {
    my ($env_server, $env_script) = @_;

    my $ScriptURL = "http://" . $env_server . $env_script;
    return ($ScriptURL);
}

sub getLog {
    my ($server, $logtype) = @_;
    
    my $LOG = $servers{$server}->{$logtype};
    return ($LOG);
}
